{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpran\\\\react-app\\\\react-css\\\\src\\\\components\\\\CourseGoals\\\\CourseInput\\\\CourseInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from \"../../UI/Button/Button\";\nimport \"./CourseInput.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseInput = props => {\n  _s();\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [inputValid, setInputValid] = useState(true);\n  const goalInputChangeHandler = event => {\n    if (event.target.value.trim().length > 0) {\n      //if input is correct, revert boolean in state and color changes back to transparent\n      setInputValid(true);\n    }\n    setEnteredValue(event.target.value);\n  };\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    //trim removes all whitespace.....so if nothing is input, just return\n    if (enteredValue.trim().length === 0) {\n      //input is invalid so set:\n      setInputValid(false);\n      return;\n    }\n    props.onAddGoal(enteredValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `form-control ${!inputValid ? \"invalid\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          color: !inputValid ? \"red\" : \"black\"\n        },\n        children: \"Course Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: goalInputChangeHandler,\n        style: {\n          borderColor: !inputValid ? \"red\" : \"black\",\n          background: !inputValid ? \"salmon\" : \"transparent\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseInput, \"BCfMNafWtk7DOVqp8hYOnrc5KOA=\");\n_c = CourseInput;\nexport default CourseInput;\nvar _c;\n$RefreshReg$(_c, \"CourseInput\");","map":{"version":3,"names":["React","useState","Button","CourseInput","props","enteredValue","setEnteredValue","inputValid","setInputValid","goalInputChangeHandler","event","target","value","trim","length","formSubmitHandler","preventDefault","onAddGoal","color","borderColor","background"],"sources":["C:/Users/jpran/react-app/react-css/src/components/CourseGoals/CourseInput/CourseInput.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport Button from \"../../UI/Button/Button\";\nimport \"./CourseInput.css\";\n\nconst CourseInput = (props) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [inputValid, setInputValid] = useState(true);\n\n  const goalInputChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      //if input is correct, revert boolean in state and color changes back to transparent\n      setInputValid(true);\n    }\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    //trim removes all whitespace.....so if nothing is input, just return\n    if (enteredValue.trim().length === 0) {\n      //input is invalid so set:\n      setInputValid(false);\n\n      return;\n    }\n    props.onAddGoal(enteredValue);\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      {/*in react we can have className change dynamically*/}\n\n      <div className={`form-control ${!inputValid ? \"invalid\" : \"\"}`}>\n        {/*if input invalid label is red*/}\n        <label style={{ color: !inputValid ? \"red\" : \"black\" }}>\n          Course Goal\n        </label>\n        <input\n          type=\"text\"\n          onChange={goalInputChangeHandler}\n          style={{\n            borderColor: !inputValid ? \"red\" : \"black\",\n            background: !inputValid ? \"salmon\" : \"transparent\",\n          }}\n        />\n      </div>\n      <Button type=\"submit\">Add Goal</Button>\n    </form>\n  );\n};\n\nexport default CourseInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAO,mBAAmB;AAAC;AAE3B,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC7B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMQ,sBAAsB,GAAIC,KAAK,IAAK;IACxC,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,EAAE,CAACC,MAAM,GAAG,CAAC,EAAE;MACxC;MACAN,aAAa,CAAC,IAAI,CAAC;IACrB;IACAF,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMG,iBAAiB,GAAIL,KAAK,IAAK;IACnCA,KAAK,CAACM,cAAc,EAAE;;IAEtB;IACA,IAAIX,YAAY,CAACQ,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAE;MACpC;MACAN,aAAa,CAAC,KAAK,CAAC;MAEpB;IACF;IACAJ,KAAK,CAACa,SAAS,CAACZ,YAAY,CAAC;EAC/B,CAAC;EAED,oBACE;IAAM,QAAQ,EAAEU,iBAAkB;IAAA,wBAGhC;MAAK,SAAS,EAAG,gBAAe,CAACR,UAAU,GAAG,SAAS,GAAG,EAAG,EAAE;MAAA,wBAE7D;QAAO,KAAK,EAAE;UAAEW,KAAK,EAAE,CAACX,UAAU,GAAG,KAAK,GAAG;QAAQ,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAE/C,eACR;QACE,IAAI,EAAC,MAAM;QACX,QAAQ,EAAEE,sBAAuB;QACjC,KAAK,EAAE;UACLU,WAAW,EAAE,CAACZ,UAAU,GAAG,KAAK,GAAG,OAAO;UAC1Ca,UAAU,EAAE,CAACb,UAAU,GAAG,QAAQ,GAAG;QACvC;MAAE;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACN,QAAC,MAAM;MAAC,IAAI,EAAC,QAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB;EAAA;IAAA;IAAA;IAAA;EAAA,QAClC;AAEX,CAAC;AAAC,GA9CIJ,WAAW;AAAA,KAAXA,WAAW;AAgDjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}