{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jpran\\\\react-app\\\\react-css\\\\src\\\\components\\\\CourseGoals\\\\CourseInput\\\\CourseInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../../UI/Button/Button\";\nimport \"./CourseInput.css\";\n\n//creating two components in one file using styledcomponents\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormControl = styled.div`\n   {\n    margin: 0.5rem 0;\n  }\n\n  & label {\n    font-weight: bold;\n    display: block;\n    margin-bottom: 0.5rem;\n  }\n\n  & input {\n    display: block;\n    width: 100%;\n    border: 1px solid #ccc;\n    font: inherit;\n    line-height: 1.5rem;\n    padding: 0 0.25rem;\n  }\n\n  & input:focus {\n    outline: none;\n    background: #f3e6ef;\n    border-color: #8b005d;\n  }\n\n  &.invalid input {\n    border-color: red;\n    background: rgb(255, 185, 185);\n  }\n\n  &.invalid label {\n    color: red;\n  }\n`;\n_c = FormControl;\nconst CourseInput = props => {\n  _s();\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [inputValid, setInputValid] = useState(true);\n  const goalInputChangeHandler = event => {\n    if (event.target.value.trim().length > 0) {\n      //if input is correct, revert boolean in state and color changes back to transparent\n      setInputValid(true);\n    }\n    setEnteredValue(event.target.value);\n  };\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    //trim removes all whitespace.....so if nothing is input, just return\n    if (enteredValue.trim().length === 0) {\n      //input is invalid so set:\n      setInputValid(false);\n      return;\n    }\n    props.onAddGoal(enteredValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      className: !inputValid && \"invalid\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Course Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: goalInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseInput, \"BCfMNafWtk7DOVqp8hYOnrc5KOA=\");\n_c2 = CourseInput;\nexport default CourseInput;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormControl\");\n$RefreshReg$(_c2, \"CourseInput\");","map":{"version":3,"names":["React","useState","styled","Button","FormControl","div","CourseInput","props","enteredValue","setEnteredValue","inputValid","setInputValid","goalInputChangeHandler","event","target","value","trim","length","formSubmitHandler","preventDefault","onAddGoal"],"sources":["C:/Users/jpran/react-app/react-css/src/components/CourseGoals/CourseInput/CourseInput.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../../UI/Button/Button\";\nimport \"./CourseInput.css\";\n\n//creating two components in one file using styledcomponents\nconst FormControl = styled.div`\n   {\n    margin: 0.5rem 0;\n  }\n\n  & label {\n    font-weight: bold;\n    display: block;\n    margin-bottom: 0.5rem;\n  }\n\n  & input {\n    display: block;\n    width: 100%;\n    border: 1px solid #ccc;\n    font: inherit;\n    line-height: 1.5rem;\n    padding: 0 0.25rem;\n  }\n\n  & input:focus {\n    outline: none;\n    background: #f3e6ef;\n    border-color: #8b005d;\n  }\n\n  &.invalid input {\n    border-color: red;\n    background: rgb(255, 185, 185);\n  }\n\n  &.invalid label {\n    color: red;\n  }\n`;\n\nconst CourseInput = (props) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [inputValid, setInputValid] = useState(true);\n\n  const goalInputChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      //if input is correct, revert boolean in state and color changes back to transparent\n      setInputValid(true);\n    }\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    //trim removes all whitespace.....so if nothing is input, just return\n    if (enteredValue.trim().length === 0) {\n      //input is invalid so set:\n      setInputValid(false);\n\n      return;\n    }\n    props.onAddGoal(enteredValue);\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      {/*in react we can have className change dynamically*/}\n      {/* backticks construct a string, i.e anything inside them becomes a string......${} in this we can put any JS and that get converted to string by backticks*/}\n\n      <FormControl className={!inputValid && \"invalid\"}>\n        {/*if input invalid label is red*/}\n        <label>Course Goal</label>\n        <input type=\"text\" onChange={goalInputChangeHandler} />\n      </FormControl>\n      <Button type=\"submit\">Add Goal</Button>\n    </form>\n  );\n};\n\nexport default CourseInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAO,mBAAmB;;AAE1B;AAAA;AACA,MAAMC,WAAW,GAAGF,MAAM,CAACG,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,KAlCID,WAAW;AAoCjB,MAAME,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC7B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMW,sBAAsB,GAAIC,KAAK,IAAK;IACxC,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,EAAE,CAACC,MAAM,GAAG,CAAC,EAAE;MACxC;MACAN,aAAa,CAAC,IAAI,CAAC;IACrB;IACAF,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMG,iBAAiB,GAAIL,KAAK,IAAK;IACnCA,KAAK,CAACM,cAAc,EAAE;;IAEtB;IACA,IAAIX,YAAY,CAACQ,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAE;MACpC;MACAN,aAAa,CAAC,KAAK,CAAC;MAEpB;IACF;IACAJ,KAAK,CAACa,SAAS,CAACZ,YAAY,CAAC;EAC/B,CAAC;EAED,oBACE;IAAM,QAAQ,EAAEU,iBAAkB;IAAA,wBAIhC,QAAC,WAAW;MAAC,SAAS,EAAE,CAACR,UAAU,IAAI,SAAU;MAAA,wBAE/C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B,eAC1B;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEE;MAAuB;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3C,eACd,QAAC,MAAM;MAAC,IAAI,EAAC,QAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB;EAAA;IAAA;IAAA;IAAA;EAAA,QAClC;AAEX,CAAC;AAAC,GAtCIN,WAAW;AAAA,MAAXA,WAAW;AAwCjB,eAAeA,WAAW;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}